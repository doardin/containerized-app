version: '3.8' # Versão do docker compose
name: example # Nome da nossa stack
networks:
  db:
    driver: bridge # Driver da rede
services:
  db:
    image: mysql:8.0 # Imagem do container
    restart: always
    volumes:
      # Definição do volume
      - './.db:/var/lib/mysql'
    environment:
      # Definição das variáveis de ambiente
      - MYSQL_DATABASE=app
      - MYSQL_ROOT_PASSWORD=root
    networks:
      # Configuração de rede do container
      - db
  app:
    image: amazoncorretto:17-alpine-jdk # Imagem do container
    working_dir: /app # Definindo o diretório de trabalho
    command: ./mvnw spring-boot:run # Comando de inicialização do container
    ports:
      # Configuração de portas
      - 8080:8080
    volumes:
      # Definição do volume
      - '.:/app'
    environment:
      # Definição das variáveis de ambiente
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=app
      - DB_USER=root
      - DB_PASS=root
    depends_on:
      # Adicionando dependência ao container
      - db
    networks:
      # Configuração de rede do container
      - db
  adminer:
    image: adminer:4 # Imagem do container
    restart: always
    ports:
      # Configuração de portas
      - 3307:8080
    environment:
      # Definição das variáveis de ambiente
      - ADMINER_DEFAULT=mysql
      - ADMINER_DESIGN=dracula
    depends_on:
      # Adicionando dependência ao container
      - db
    networks:
      # Configuração de rede do container
      - db
